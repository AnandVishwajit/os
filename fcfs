#include <stdio.h>
#include <conio.h>
#include <math.h>

struct process{
    int process_no;
    int arrival_time;
    int response_time;
    int completion_time;
    int burst_time;
    int waiting_time;
    int turn_around_time;
};

void sort(struct process a1[], int n){
    for (int i=0; i<n-1; i++){
        for (int j=i+1; j<n-i-1; j++){
          if((a1[i].arrival_time)>(a1[j].arrival_time)){
            struct process temp = a1[i];
            a1[i] = a1[j];
            a1[j] = temp;
        }
    }
}};

void fcfs(struct process a1[], int n){
    int current_time = 0;
    for (int i=0; i<n; i++){
        current_time = fmax(current_time, a1[i].arrival_time);
        a1[i].response_time = current_time - a1[i].arrival_time;
        current_time += a1[i].burst_time;
        a1[i].completion_time = current_time;
        a1[i].turn_around_time = a1[i].completion_time - a1[i].arrival_time;
        a1[i].waiting_time = a1[i].turn_around_time - a1[i].arrival_time;

}
}

void print1(struct process a1[], int n){
    for(int i=0; i<n; i++){
        printf("Process No: %d\n", a1[i].process_no);
        printf("Arrival Time: %d\n", a1[i].arrival_time);
        printf("Response Time: %d\n", a1[i].response_time);
        printf("Completion Time: %d\n", a1[i].completion_time);
        printf("Burst Time: %d\n", a1[i].burst_time);
        printf("Waiting Time: %d\n", a1[i].waiting_time);
        printf("Turn Around Time: %d\n", a1[i].turn_around_time);
    }
}

int main(){
    int n=5;
    struct process proc[n];
    for(int i=0; i<n; i++){
        printf("P%d Process num: ", i + 1);
        scanf("%d", &proc[i].process_no);
        printf("P%d Arrival Time: ", i + 1);
        scanf("%d", &proc[i].arrival_time);
        printf("P%d Burst Time: ", i + 1);
        scanf("%d", &proc[i].burst_time);
}
      sort(proc, n);
      fcfs(proc, n);
      print1(proc, n);
}
